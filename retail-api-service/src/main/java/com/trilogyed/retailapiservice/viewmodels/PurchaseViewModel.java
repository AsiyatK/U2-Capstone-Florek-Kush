package com.trilogyed.retailapiservice.viewmodels;

import com.trilogyed.retailapiservice.viewmodels.backing.CustomerViewModel;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.List;
import java.util.Objects;

public class PurchaseViewModel {

    //generated by creating new invoice
    private int invoiceId;
    private LocalDate purchaseDate;
    //generated by getting customer via OrderViewModel customerId
    private CustomerViewModel customer;
    //generated by getting product/inventory data using OVM productId/quantity
    private List<PurchaseItem> purchaseDetails;
    //calculated by summing all line item subtotals
    private BigDecimal total;
    //generated by getting points from level-up service with OVM customerId
    private int pointsTotal;

    public int getInvoiceId() {
        return invoiceId;
    }

    public void setInvoiceId(int invoiceId) {
        this.invoiceId = invoiceId;
    }

    public LocalDate getPurchaseDate() {
        return purchaseDate;
    }

    public void setPurchaseDate(LocalDate purchaseDate) {
        this.purchaseDate = purchaseDate;
    }

    public CustomerViewModel getCustomer() {
        return customer;
    }

    public void setCustomer(CustomerViewModel customer) {
        this.customer = customer;
    }

    public List<PurchaseItem> getPurchaseDetails() {
        return purchaseDetails;
    }

    public void setPurchaseDetails(List<PurchaseItem> purchaseDetails) {
        this.purchaseDetails = purchaseDetails;
    }

    public BigDecimal getTotal() {
        return total;
    }

    public void setTotal(BigDecimal total) {
        this.total = total;
    }

    public int getPointsTotal() {
        return pointsTotal;
    }

    public void setPointsTotal(int pointsTotal) {
        this.pointsTotal = pointsTotal;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        PurchaseViewModel that = (PurchaseViewModel) o;
        return getInvoiceId() == that.getInvoiceId() &&
                getPointsTotal() == that.getPointsTotal() &&
                Objects.equals(getPurchaseDate(), that.getPurchaseDate()) &&
                Objects.equals(getCustomer(), that.getCustomer()) &&
                Objects.equals(getPurchaseDetails(), that.getPurchaseDetails()) &&
                Objects.equals(getTotal(), that.getTotal());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getInvoiceId(), getPurchaseDate(), getCustomer(), getPurchaseDetails(), getTotal(), getPointsTotal());
    }
}
